Inspecting 49 files
C...C.C.C...C...........C.CCCCC..................

Offenses:

Gemfile:1:1: C: Layout/EndOfLine: Carriage return character detected.
# frozen_string_literal: true ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/application_controller.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
# frozen_string_literal: true ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/event_controller.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
# frozen_string_literal: true ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/event_controller.rb:3:1: C: Metrics/ClassLength: Class has too many lines. [205/200]
class EventController < ApplicationController ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/point_event_controller.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
# frozen_string_literal: true ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/point_event_controller.rb:223:1: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
app/controllers/users_controller.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
# frozen_string_literal: true ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/application_record.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
# frozen_string_literal: true ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/event.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
# frozen_string_literal: true ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/event.rb:75:9: C: Rails/Output: Do not write to stdout. Use Rails's logger if you want to log.
        puts('READING FROM CSV..........................................')
        ^^^^
app/models/event.rb:76:9: C: Rails/Output: Do not write to stdout. Use Rails's logger if you want to log.
        puts(row.to_h[1])
        ^^^^
app/models/event.rb:80:7: C: Rails/Output: Do not write to stdout. Use Rails's logger if you want to log.
      puts('Error reading specified csv file, maybe no csv selected')
      ^^^^
app/models/event.rb:84:7: C: Rails/Output: Do not write to stdout. Use Rails's logger if you want to log.
      puts("#{event.name}")
      ^^^^
app/models/event.rb:84:12: C: [Correctable] Style/RedundantInterpolation: Prefer to_s over string interpolation.
      puts("#{event.name}")
           ^^^^^^^^^^^^^^^
app/models/event.rb:89:13: C: Rails/Output: Do not write to stdout. Use Rails's logger if you want to log.
            puts("New event: #{event.name} created")
            ^^^^
app/models/event.rb:91:13: C: Rails/Output: Do not write to stdout. Use Rails's logger if you want to log.
            puts("Error with event: #{event.name}, might already exist")
            ^^^^
app/models/event.rb:97:15: C: Rails/Output: Do not write to stdout. Use Rails's logger if you want to log.
              puts(event.errors.full_messages[0])
              ^^^^
app/models/event.rb:102:9: C: Rails/Output: Do not write to stdout. Use Rails's logger if you want to log.
        puts(e)
        ^^^^
app/models/event_attendee.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
# frozen_string_literal: true ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/event_attendee.rb:21:20: C: [Correctable] Style/ParenthesesAroundCondition: Don't use parentheses around the condition of an if.
    return true if (DateTime.now <= event.endDate)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/point_event.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
# frozen_string_literal: true ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/point_event.rb:51:1: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
app/models/point_event.rb:58:9: C: Rails/Output: Do not write to stdout. Use Rails's logger if you want to log.
        puts('READING FROM CSV..........................................')
        ^^^^
app/models/point_event.rb:59:9: C: Rails/Output: Do not write to stdout. Use Rails's logger if you want to log.
        puts(row.to_h[1])
        ^^^^
app/models/point_event.rb:63:7: C: Rails/Output: Do not write to stdout. Use Rails's logger if you want to log.
      puts('Error reading specified csv file, maybe no csv selected')
      ^^^^
app/models/point_event.rb:67:7: C: Rails/Output: Do not write to stdout. Use Rails's logger if you want to log.
      puts("#{event.name}")
      ^^^^
app/models/point_event.rb:67:12: C: [Correctable] Style/RedundantInterpolation: Prefer to_s over string interpolation.
      puts("#{event.name}")
           ^^^^^^^^^^^^^^^
app/models/point_event.rb:72:13: C: Rails/Output: Do not write to stdout. Use Rails's logger if you want to log.
            puts("New event: #{event.name} created")
            ^^^^
app/models/point_event.rb:74:13: C: Rails/Output: Do not write to stdout. Use Rails's logger if you want to log.
            puts("Error with event: #{event.name}, might already exist")
            ^^^^
app/models/point_event.rb:80:15: C: Rails/Output: Do not write to stdout. Use Rails's logger if you want to log.
              puts(event.errors.full_messages[0])
              ^^^^
app/models/point_event.rb:85:9: C: Rails/Output: Do not write to stdout. Use Rails's logger if you want to log.
        puts(e)
        ^^^^
app/models/point_event_attendee.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
# frozen_string_literal: true ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/point_event_attendee.rb:11:1: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
app/models/user.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
# frozen_string_literal: true ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/user.rb:96:9: C: Rails/Output: Do not write to stdout. Use Rails's logger if you want to log.
        puts('READING FROM CSV..........................................')
        ^^^^
app/models/user.rb:97:9: C: Rails/Output: Do not write to stdout. Use Rails's logger if you want to log.
        puts(row.to_h[1])
        ^^^^
app/models/user.rb:101:7: C: Rails/Output: Do not write to stdout. Use Rails's logger if you want to log.
      puts('Error reading specified csv file, maybe no csv selected')
      ^^^^
app/models/user.rb:104:5: C: Metrics/BlockLength: Block has too many lines. [21/20]
    users.each do |user| ...
    ^^^^^^^^^^^^^^^^^^^^
app/models/user.rb:105:7: C: Rails/Output: Do not write to stdout. Use Rails's logger if you want to log.
      puts("#{user.firstName} #{user.lastName}")
      ^^^^
app/models/user.rb:110:13: C: Rails/Output: Do not write to stdout. Use Rails's logger if you want to log.
            puts("New user: #{user.firstName} #{user.lastName} created")
            ^^^^
app/models/user.rb:112:13: C: Rails/Output: Do not write to stdout. Use Rails's logger if you want to log.
            puts("Error with user: #{user.firstName} #{user.lastName}, might already exist")
            ^^^^
app/models/user.rb:118:15: C: Rails/Output: Do not write to stdout. Use Rails's logger if you want to log.
              puts(user.errors.full_messages[0])
              ^^^^
app/models/user.rb:124:9: C: Rails/Output: Do not write to stdout. Use Rails's logger if you want to log.
        puts(e)
        ^^^^

49 files inspected, 43 offenses detected, 6 offenses auto-correctable
